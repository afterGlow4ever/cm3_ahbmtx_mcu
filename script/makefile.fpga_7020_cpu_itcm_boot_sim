SIM_TARGET := fpga_7020_cpu_itcm_boot_sim
SIM_DEFINE := +define+FSDB_DUMP +define+CPU_ITCM_BOOT +define+FPGA +define+FPGA_SRAM +define+ZYNQ_7020
SIM_PATH := ${PRJ_SIM_DIR}/${SIM_TARGET}
DUT_LIST := dut.list
SIM_LIST := zynq_sim.list
SIM_INC_LIST := sim_inc.list
SIM_SCRIPTS_PATH := ${PRJ_SIM_DIR}/script
CMDFILE := ${SIM_SCRIPTS_PATH}/vcs_sim_cmdfile.f
WAVEFORM := TOP.fsdb
WAVELIST := ${SIM_SCRIPTS_PATH}/boot.rc

SDK_TARGET := bootloader
SDK_DEFINE := -D__NO_SYSTEM_INIT

SDK_PATH := ${PRJ_SDK_DIR}/${SDK_TARGET}
BUILD_PATH := ${PRJ_SDK_DIR}/${SDK_TARGET}/build
OUTPUT_PATH := ${PRJ_SDK_DIR}/${SDK_TARGET}/output
FW_PATH := ${PRJ_FW_DIR}/${SDK_TARGET}
FW_INC := -I ${PRJ_FW_DIR}/${SDK_TARGET}/boot/inc
CPU_INC := -I ${PRJ_LIB_DIR}/cmsis/CMSIS/Include -I ${PRJ_LIB_DIR}/cmsis/Device/ARM/CM3DS/Include
BASE_INC := -I ${PRJ_DRV_DIR}
SDK_INC := ${FW_INC} ${BASE_INC} ${CPU_INC} 

LDSCRIPT := ${FW_PATH}/bootloader_itcm.ld
STARTUP_S := ${PRJ_LIB_DIR}/cmsis/Device/ARM/CM3DS/Source/GCC/startup_CM3DS.s

CFLAG := -std=c99 -DPRJ=${SDK_TARGET} -D__GNUC__=9 -Og -Wall -Wextra -fdata-sections -ffunction-sections
ARCH_FLAG := -mthumb -mthumb-interwork -mcpu=cortex-m3
LDFLAG := -Wl,-gc-sections -Wl,-Map=${SDK_TARGET}.map,--cref -specs=nano.specs -specs=nosys.specs
FLAG := ${CFLAG} ${ARCH_FLAG}

SHELL := /bin/bash

all: prepare build_bootloader compile_rtl sim waveform

prepare:
	-mkdir ${SDK_PATH}
	-mkdir ${BUILD_PATH}
	-mkdir ${OUTPUT_PATH}
	-mkdir ${SIM_PATH}
	cp ${DUT_LIST} ${SIM_PATH}
	cp ${SIM_LIST} ${SIM_PATH}
	cp ${SIM_INC_LIST} ${SIM_PATH}
	cp ${CMDFILE} ${SIM_PATH}
	source vcs_sim_prepare.sh ${PRJ_DIR} ${SIM_PATH}

build_bootloader:
	cd ${BUILD_PATH} && arm-none-eabi-gcc ${SDK_DEFINE} ${FLAG} ${SDK_INC} -c ${FW_PATH}/boot/src/main.c -o ${BUILD_PATH}/main.o
	cd ${BUILD_PATH} && arm-none-eabi-gcc ${SDK_DEFINE} ${FLAG} ${SDK_INC} -c ${FW_PATH}/boot/src/interrupt.c -o ${BUILD_PATH}/interrupt.o
	cd ${BUILD_PATH} && arm-none-eabi-gcc ${SDK_DEFINE} ${FLAG} ${SDK_INC} -c ${STARTUP_S} -o ${BUILD_PATH}/startup_CM3DS.o
	cd ${BUILD_PATH} && arm-none-eabi-gcc -T ${LDSCRIPT} ${ARCH_FLAG} *.o -o ${SDK_TARGET}.elf ${LDFLAG}
	mv ${BUILD_PATH}/${SDK_TARGET}.elf ${OUTPUT_PATH}
	mv ${BUILD_PATH}/${SDK_TARGET}.map ${OUTPUT_PATH}
	cd ${OUTPUT_PATH} && arm-none-eabi-objcopy -O binary -S ${SDK_TARGET}.elf ${SDK_TARGET}.bin
	cd ${OUTPUT_PATH} && arm-none-eabi-objcopy -O ihex -S ${SDK_TARGET}.elf ${SDK_TARGET}.hex
	cp ${OUTPUT_PATH}/${SDK_TARGET}.bin ${SIM_PATH}
	cd ${SIM_PATH} && xxd -g 4 -c 4 -p ${SDK_TARGET}.bin > ${SDK_TARGET}.txt
	cd ${OUTPUT_PATH} && arm-none-eabi-objdump -D ${SDK_TARGET}.elf > ${SDK_TARGET}.asm
	source lsb2msb.sh ${SIM_PATH} ${SDK_TARGET}.txt
	cd ${SIM_PATH} && cp ${SDK_TARGET}.txt ${SDK_TARGET}.mem
#	source txt2mif.sh ${SIM_PATH} ${SDK_TARGET}.txt 2048 32 ${SDK_TARGET}.mif

compile_rtl:
	cd ${SIM_PATH} && vcs ${SIM_DEFINE} -top glbl -full64 -f ${CMDFILE} -P ${VERDI_DT} ${VERDI_DA} -f ${SIM_INC_LIST} -f ${SIM_LIST} -f ${DUT_LIST} 

sim:
	cd ${SIM_PATH} && ./simv -l sim.log

waveform:
	cd ${SIM_PATH} && verdi ${SIM_DEFINE} -f ${CMDFILE} -f ${SIM_INC_LIST} -f ${SIM_LIST} -f ${DUT_LIST} -ssf ${WAVEFORM} -sswr ${WAVELIST} &
 
#clean:

