SDK_TARGET := bootloader
SDK_DEFINE := -D__NO_SYSTEM_INIT

SDK_PATH := ${PRJ_SDK_DIR}/${SDK_TARGET}
BUILD_PATH := ${PRJ_SDK_DIR}/${SDK_TARGET}/build
OUTPUT_PATH := ${PRJ_SDK_DIR}/${SDK_TARGET}/output
FW_PATH := ${PRJ_FW_DIR}/${SDK_TARGET}
FW_INC_PATH := -I ${PRJ_FW_DIR}/${SDK_TARGET}/boot/inc
CPU_INC_PATH := -I ${PRJ_LIB_DIR}/cmsis/CMSIS/Include -I ${PRJ_LIB_DIR}/cmsis/Device/ARM/CM3DS/Include
BASE_INC_PATH := -I ${PRJ_DRV_DIR}
INC_PATH := ${FW_INC_PATH} ${BASE_INC_PATH} ${CPU_INC_PATH} 

LDSCRIPT := ${FW_PATH}/bootloader_itcm.ld
STARTUP_S := ${PRJ_LIB_DIR}/cmsis/Device/ARM/CM3DS/Source/GCC/startup_CM3DS.s

CFLAG := -std=c99 -DPRJ=${SDK_TARGET} -D__GNUC__=9 -Og -Wall -Wextra -fdata-sections -ffunction-sections
ARCH_FLAG := -mthumb -mthumb-interwork -mcpu=cortex-m3
LDFLAG := -Wl,-gc-sections -Wl,-Map=${SDK_TARGET}.map,--cref -specs=nano.specs -specs=nosys.specs
FLAG := ${CFLAG} ${ARCH_FLAG}

SHELL := /bin/bash

all: prepare compile link build dump

prepare:
	-mkdir ${SDK_PATH}
	-mkdir ${BUILD_PATH}
	-mkdir ${OUTPUT_PATH}

compile:
	cd ${BUILD_PATH} && arm-none-eabi-gcc ${SDK_DEFINE} ${FLAG} ${INC_PATH} -c ${FW_PATH}/boot/src/main.c -o ${BUILD_PATH}/main.o
	cd ${BUILD_PATH} && arm-none-eabi-gcc ${SDK_DEFINE} ${FLAG} ${INC_PATH} -c ${FW_PATH}/boot/src/interrupt.c -o ${BUILD_PATH}/interrupt.o
	cd ${BUILD_PATH} && arm-none-eabi-gcc ${SDK_DEFINE} ${FLAG} ${INC_PATH} -c ${STARTUP_S} -o ${BUILD_PATH}/startup_CM3DS.o

link:
	cd ${BUILD_PATH} && arm-none-eabi-gcc -T ${LDSCRIPT} ${ARCH_FLAG} *.o -o ${SDK_TARGET}.elf ${LDFLAG}

build:
	mv ${BUILD_PATH}/${SDK_TARGET}.elf ${OUTPUT_PATH}
	mv ${BUILD_PATH}/${SDK_TARGET}.map ${OUTPUT_PATH}
	cd ${OUTPUT_PATH} && arm-none-eabi-objcopy -O binary -S ${SDK_TARGET}.elf ${SDK_TARGET}.bin
	cd ${OUTPUT_PATH} && arm-none-eabi-objcopy -O ihex -S ${SDK_TARGET}.elf ${SDK_TARGET}.hex

dump:
	cd ${OUTPUT_PATH} && arm-none-eabi-objdump -D ${SDK_TARGET}.elf > ${SDK_TARGET}.asm

